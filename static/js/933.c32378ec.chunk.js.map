{"version":3,"file":"static/js/933.c32378ec.chunk.js","mappings":"qMAEaA,EAAe,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACvBC,GAAWC,EAAAA,EAAAA,MACjB,OACE,0BACE,wBACGF,EAAOG,KAAI,SAAAC,GAAK,OACf,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAMP,GAAhD,SACGG,EAAMK,SAFFL,EAAME,GADA,OAUxB,C,oHCLD,EATiB,WAEf,MCF6B,WAC7B,OAAoCI,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAuBC,EAAvB,KAMA,OAJAC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,KAAkBC,MAAK,SAAAC,GAAG,OAAIJ,EAAUI,EAAd,GAC3B,GAAE,IAEI,CAAEL,eAAAA,EACV,CDN6BM,GAApBN,EAAR,EAAQA,eACR,OACE,0BACE,SAACZ,EAAA,EAAD,CAAcC,OAAQW,KAG3B,C,8LETDO,EAAAA,GAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,4CAEHC,EAAW,mCAAG,oGACFF,EAAAA,GAAAA,IAAA,6BAAgCC,IAD9B,cACnBE,EADmB,yBAElBA,EAASC,KAAKC,QAAQpB,KAAI,YAC/B,MAAO,CACLG,GAFgD,EAAhBA,GAGhCG,MAHgD,EAAZA,MAKvC,KAPwB,2CAAH,qDAUXe,EAAY,mCAAG,WAAMC,GAAN,uFACHP,EAAAA,GAAAA,IAAA,uBACLC,EADK,kBACYM,EADZ,2BADG,cACpBJ,EADoB,yBAInBA,EAASC,KAAKC,QAAQpB,KAAI,YAC/B,MAAO,CACLG,GAFgD,EAAhBA,GAGhCG,MAHgD,EAAZA,MAKvC,KATyB,2CAAH,sDAYZiB,EAAe,mCAAG,WAAMC,GAAN,uFACNT,EAAAA,GAAAA,IAAA,iBACXS,GADW,OACDR,EADC,oBADM,cACvBE,EADuB,yBAItBA,EAASC,MAJa,2CAAH,sDAOfM,EAAe,mCAAG,WAAMC,GAAN,uFACNX,EAAAA,GAAAA,IAAA,iBACXW,EADW,mBACQV,EADR,oBADM,cACvBE,EADuB,yBAKtBA,EAASC,KAAKQ,KAAK3B,KAAI,YAC5B,MAAO,CACL4B,KAFqE,EAAxCA,KAG7BC,UAHqE,EAAlCA,UAInCC,aAJqE,EAAvBA,aAK9C3B,GALqE,EAATA,GAO/D,KAZ4B,2CAAH,sDAef4B,EAAgB,mCAAG,WAAML,GAAN,uFACPX,EAAAA,GAAAA,IAAA,iBACXW,EADW,mBACQV,EADR,2BADO,cACxBE,EADwB,yBAIvBA,EAASC,KAAKC,QAAQpB,KAAI,YAC/B,MAAO,CACLgC,OAF0D,EAA1BA,OAGhCC,QAH0D,EAAlBA,QAIxC9B,GAJ0D,EAATA,GAMpD,KAV6B,2CAAH,qD","sources":["components/TrendingList/TrendingList.jsx","pages/HomePage.jsx","utils/hooks/useTrendingList.jsx","utils/api/apiMoviedb.jsx"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\n\nexport const TrendingList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <div>\n      <ul>\n        {movies.map(movie => (\n          <li key={movie.id}>\n            <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n              {movie.title}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};","import { useTrendingList } from '../utils/hooks/useTrendingList';\nimport { TrendingList } from 'components/TrendingList/TrendingList';\n\nconst HomePage = () => {\n\n  const { trendingMovies }  = useTrendingList();\n  return (\n    <div>\n      <TrendingList movies={trendingMovies} />\n    </div>\n  );\n}\nexport default HomePage;","import * as API from '../api/apiMoviedb';\nimport { useState, useEffect } from 'react';\n\nexport const useTrendingList = () => {\n  const [trendingMovies, setMovies] = useState([]);\n\n  useEffect(() => {\n    API.getTrending().then(ret => setMovies(ret));\n  }, []);\n\n  return { trendingMovies };\n};  ","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '?api_key=11517d6931d2b5137dd13eb45c72b984';\n\nexport const getTrending = async () => {\n  const response = await axios.get(`/trending/movie/day${API_KEY}`);\n  return response.data.results.map(({ id, title }) => {\n    return {\n      id,\n      title,\n    };\n  });\n};\n\nexport const searchMovies = async inputValue => {\n  const response = await axios.get(\n    `/search/movie${API_KEY}&query=${inputValue}&language=en-US&page=1`\n  );\n  return response.data.results.map(({ id, title }) => {\n    return {\n      id,\n      title,\n    };\n  });\n};\n\nexport const getMovieDetails = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getMovieCredits = async moviesId => {\n  const response = await axios.get(\n    `/movie/${moviesId}/credits${API_KEY}&language=en-US`\n  );\n\n  return response.data.cast.map(({ name, character, profile_path, id }) => {\n    return {\n      name,\n      character,\n      profile_path,\n      id,\n    };\n  });\n};\n\nexport const getMoviesReviews = async moviesId => {\n  const response = await axios.get(\n    `/movie/${moviesId}/reviews${API_KEY}&language=en-US&page=1`\n  );\n  return response.data.results.map(({ author, content, id }) => {\n    return {\n      author,\n      content,\n      id,\n    };\n  });\n};\n"],"names":["TrendingList","movies","location","useLocation","map","movie","to","id","state","from","title","useState","trendingMovies","setMovies","useEffect","API","then","ret","useTrendingList","axios","API_KEY","getTrending","response","data","results","searchMovies","inputValue","getMovieDetails","movieId","getMovieCredits","moviesId","cast","name","character","profile_path","getMoviesReviews","author","content"],"sourceRoot":""}