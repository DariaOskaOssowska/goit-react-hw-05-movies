{"version":3,"file":"static/js/434.a96e5e53.chunk.js","mappings":"oOA+BA,EA3BgB,WACd,IACA,ECH6B,SAAAA,GAC7B,OAAmCC,EAAAA,EAAAA,UAAS,IAA5C,eAAOC,EAAP,KAAqBC,EAArB,KAKA,OAHAC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,GAAqBL,GAASM,MAAK,SAAAC,GAAG,OAAIJ,EAAWI,EAAf,GACvC,GAAE,CAACP,IACG,CAAEE,aAAAA,EACV,CDJ0BM,EADLC,EAAAA,EAAAA,MAAZT,SACAE,EAAR,EAAQA,aAER,OACE,2BAC4B,KAAb,OAAZA,QAAY,IAAZA,OAAA,EAAAA,EAAcQ,UACb,sEAEF,wBACGR,EAAaS,KAAI,SAAAC,GAChB,OACE,2BACE,oCAAYA,EAAOC,WACnB,uBAAID,EAAOE,YAFJF,EAAOG,GAKnB,QAIR,C,8LEvBDC,EAAAA,GAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,4CAEHC,EAAW,mCAAG,oGACFF,EAAAA,GAAAA,IAAA,6BAAgCC,IAD9B,cACnBE,EADmB,yBAElBA,EAASC,KAAKC,QAAQV,KAAI,YAC/B,MAAO,CACLI,GAFgD,EAAhBA,GAGhCO,MAHgD,EAAZA,MAKvC,KAPwB,2CAAH,qDAUXC,EAAY,mCAAG,WAAMC,GAAN,uFACHR,EAAAA,GAAAA,IAAA,uBACLC,EADK,kBACYO,EADZ,2BADG,cACpBL,EADoB,yBAInBA,EAASC,KAAKC,QAAQV,KAAI,YAC/B,MAAO,CACLI,GAFgD,EAAhBA,GAGhCO,MAHgD,EAAZA,MAKvC,KATyB,2CAAH,sDAYZG,EAAe,mCAAG,WAAMzB,GAAN,uFACNgB,EAAAA,GAAAA,IAAA,iBACXhB,GADW,OACDiB,EADC,oBADM,cACvBE,EADuB,yBAItBA,EAASC,MAJa,2CAAH,sDAOfM,EAAe,mCAAG,WAAMC,GAAN,uFACNX,EAAAA,GAAAA,IAAA,iBACXW,EADW,mBACQV,EADR,oBADM,cACvBE,EADuB,yBAKtBA,EAASC,KAAKQ,KAAKjB,KAAI,YAC5B,MAAO,CACLkB,KAFqE,EAAxCA,KAG7BC,UAHqE,EAAlCA,UAInCC,aAJqE,EAAvBA,aAK9ChB,GALqE,EAATA,GAO/D,KAZ4B,2CAAH,sDAefiB,EAAgB,mCAAG,WAAML,GAAN,uFACPX,EAAAA,GAAAA,IAAA,iBACXW,EADW,mBACQV,EADR,2BADO,cACxBE,EADwB,yBAIvBA,EAASC,KAAKC,QAAQV,KAAI,YAC/B,MAAO,CACLE,OAF0D,EAA1BA,OAGhCC,QAH0D,EAAlBA,QAIxCC,GAJ0D,EAATA,GAMpD,KAV6B,2CAAH,qD","sources":["components/Reviews/Reviews.jsx","utils/hooks/useMovieReviews.jsx","utils/api/apiMoviedb.jsx"],"sourcesContent":["import { useParams } from 'react-router-dom';\nimport { useMovieReviews } from 'utils/hooks/useMovieReviews';\nimport PropTypes from 'prop-types';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const { movieReviews } = useMovieReviews(movieId);\n\n  return (\n    <div>\n      {movieReviews?.length === 0 && (\n        <p>We don't have any reviews for this movies</p>\n      )}\n      <ul>\n        {movieReviews.map(review => {\n          return (\n            <li key={review.id}>\n              <p>Author: {review.author}</p>\n              <p>{review.content}</p>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n\nReviews.propTypes = {\n  movieId: PropTypes.string,\n};\n\nexport default Reviews;","import * as API from '../api/apiMoviedb';\nimport { useState, useEffect } from 'react';\n\nexport const useMovieReviews = movieId => {\n  const [movieReviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    API.getMoviesReviews(movieId).then(ret => setReviews(ret));\n  }, [movieId]);\n  return { movieReviews };\n};","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '?api_key=11517d6931d2b5137dd13eb45c72b984';\n\nexport const getTrending = async () => {\n  const response = await axios.get(`/trending/movie/day${API_KEY}`);\n  return response.data.results.map(({ id, title }) => {\n    return {\n      id,\n      title,\n    };\n  });\n};\n\nexport const searchMovies = async inputValue => {\n  const response = await axios.get(\n    `/search/movie${API_KEY}&query=${inputValue}&language=en-US&page=1`\n  );\n  return response.data.results.map(({ id, title }) => {\n    return {\n      id,\n      title,\n    };\n  });\n};\n\nexport const getMovieDetails = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getMovieCredits = async moviesId => {\n  const response = await axios.get(\n    `/movie/${moviesId}/credits${API_KEY}&language=en-US`\n  );\n\n  return response.data.cast.map(({ name, character, profile_path, id }) => {\n    return {\n      name,\n      character,\n      profile_path,\n      id,\n    };\n  });\n};\n\nexport const getMoviesReviews = async moviesId => {\n  const response = await axios.get(\n    `/movie/${moviesId}/reviews${API_KEY}&language=en-US&page=1`\n  );\n  return response.data.results.map(({ author, content, id }) => {\n    return {\n      author,\n      content,\n      id,\n    };\n  });\n};\n"],"names":["movieId","useState","movieReviews","setReviews","useEffect","API","then","ret","useMovieReviews","useParams","length","map","review","author","content","id","axios","API_KEY","getTrending","response","data","results","title","searchMovies","inputValue","getMovieDetails","getMovieCredits","moviesId","cast","name","character","profile_path","getMoviesReviews"],"sourceRoot":""}